# possibly saved as ./roles/solr-cluster/tasks

- name: 检查solr是否已安装
  shell: ls {{solr_home}}
  register: solr_result
  ignore_errors: True
  
- name: 检查zookeeper是否已安装
  shell: ls {{zookeeper_home}}
  register: zookeeper_result
  ignore_errors: True
  
- name: 拷贝solr安装包
  copy: src={{app_tgz}} dest={{tool_dir}} owner={{user_run}} group={{user_run}} mode=0700
  when: solr_result is failed or zookeeper_result is failed
  
- name: 解压solr
  shell: cd {{tool_dir}} && tar zxvf {{app_tgz}} -C {{software_dir}}
  when: solr_result is failed

- name: 新建文件{{solr_data_dir}}
  file: dest={{solr_data_dir}} state=directory owner={{user_run}} group={{user_run}} recurse=yes
  
# - name: 拷贝solr.xml到目录{{solr_data_dir}}/solr.xml
  # template: src=solr.xml.tem dest={{solr_data_dir}}/solr.xml owner={{user_run}} group={{user_run}} mode=0644
  # when: solr_result is failed
  
# - name: check zookeeper 集群服务是否已运行
  # shell: check_zk_cluster_status.sh {{zk_cluster_list}}
  # register: zk_cluster_result
  # ignore_errors: True

- name: 拷贝脚本solr.in.sh
  template: src=solr.in.sh dest={{solr_home}}/bin/solr.in.sh owner={{user_run}} group={{user_run}} mode=0700

- name: 拷贝系统服务配置文件
  template: src=appname.service.mod dest=/usr/lib/systemd/system/{{appname}}.service owner=root group=root mode=0644
  
- name: 修改{{solr_home}}所有者
  shell: chown -Rf {{user_run}}:{{user_run}} {{solr_home}}
  
- name: 启动solr cloud
  shell: systemctl daemon-reload && systemctl restart solrcloud.service

# - name: 启动solr cloud
  # shell: {{solr_home}}/solr-cloud.sh
